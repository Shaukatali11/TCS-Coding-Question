Question:
Given a string S(input consisting) of ‘*’ and ‘#’. The length of the string is variable. The task is to find the minimum number of ‘*’ or ‘#’ to make it a valid string. 
The string is considered valid if the number of ‘*’ and ‘#’ are equal. The ‘*’ and ‘#’ can be at any position in the string.

Note : The output will be a positive or negative integer based on number of ‘*’ and ‘#’ in the input string.

(*>#): positive integer
(#>*): negative integer
(#=*): 0

Example 1:
Input 1:
###***   -> Value of S

Output :
0           → number of * and # are equal 

==================================================================Solution=============================================

#include<bits/stdc++.h>
using namespace std;

void isValid(string str,int s){
    int countStar=0;
    int countHash=0;
    for(int i=0;i<s;i++){
        if(str[i]=='*'){
            countStar++;
        }else{
            countHash++;
        }
    }
    cout<<countStar-countHash;
}

int main(){
    string str;
    cout<<"enter * and #";
    cin>>str;
    
    int s=str.size();
    isValid(str,s);
    return 0;
}
